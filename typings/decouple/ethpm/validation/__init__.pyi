"""
This type stub file was generated by pyright.
"""

import hashlib
from typing import List, TYPE_CHECKING
from urllib import parse
from eth_utils import is_checksum_address, to_bytes, to_int, to_text
from ethpm._utils.chains import is_supported_chain_id
from ethpm._utils.ipfs import is_ipfs_uri
from ethpm._utils.registry import is_ens_domain
from ethpm.constants import REGISTRY_URI_SCHEMES
from ethpm.exceptions import EthPMValidationError
from ethpm.validation.misc import validate_escaped_string
from ethpm.validation.package import validate_package_name
from web3 import Web3

if TYPE_CHECKING:
    ...
def validate_ipfs_uri(uri: str) -> None:
    """
    Raise an exception if the provided URI is not a valid IPFS URI.
    """
    ...

def validate_registry_uri(uri: str) -> None:
    """
    Raise an exception if the URI does not conform to the registry URI scheme.
    """
    ...

def validate_registry_uri_authority(auth: str) -> None:
    """
    Raise an exception if the authority is not a valid ENS domain
    or a valid checksummed contract address.
    """
    ...

def validate_registry_uri_scheme(scheme: str) -> None:
    """
    Raise an exception if the scheme is not a valid registry URI scheme:
     - 'erc1319'
     - 'ethpm'
    """
    ...

def validate_single_matching_uri(all_blockchain_uris: List[str], w3: Web3) -> str:
    """
    Return a single block URI after validating that it is the *only* URI in
    all_blockchain_uris that matches the w3 instance.
    """
    ...

def validate_blob_uri_contents(contents: bytes, blob_uri: str) -> None:
    """
    Raises an exception if the sha1 hash of the contents does not match the hash found in te
    blob_uri. Formula for how git calculates the hash found here:
    http://alblue.bandlem.com/2011/08/git-tip-of-week-objects.html
    """
    ...

