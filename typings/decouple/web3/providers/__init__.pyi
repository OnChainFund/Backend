"""
This type stub file was generated by pyright.
"""

import os
from typing import Any, Callable, Dict, Optional, Sequence, Tuple, Type, Union
from urllib.parse import urlparse
from eth_typing import URI
from web3.exceptions import CannotHandleRequest
from web3.providers import BaseProvider, HTTPProvider, IPCProvider, WebsocketProvider
from web3.types import RPCEndpoint, RPCResponse

HTTP_SCHEMES = ...
WS_SCHEMES = ...
def load_provider_from_environment() -> BaseProvider:
    ...

def load_provider_from_uri(uri_string: URI, headers: Optional[Dict[str, Tuple[str, str]]] = ...) -> BaseProvider:
    ...

class AutoProvider(BaseProvider):
    default_providers = ...
    _active_provider = ...
    def __init__(self, potential_providers: Optional[Sequence[Union[Callable[..., BaseProvider], Type[BaseProvider]]]] = ...) -> None:
        """
        :param iterable potential_providers: ordered series of provider classes to attempt with

        AutoProvider will initialize each potential provider (without arguments),
        in an attempt to find an active node. The list will default to
        :attribute:`default_providers`.
        """
        ...
    
    def make_request(self, method: RPCEndpoint, params: Any) -> RPCResponse:
        ...
    
    def isConnected(self) -> bool:
        ...
    


